# Generated by Django 5.0.3 on 2024-05-13 10:51

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Container',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('cluster', models.UUIDField(blank=True, null=True)),
                ('pod', models.UUIDField()),
                ('name', models.CharField(max_length=100)),
                ('image', models.CharField(blank=True, max_length=1000, null=True)),
                ('namespace', models.CharField(max_length=100)),
                ('ports', models.JSONField(blank=True, default=list, null=True)),
                ('has_logs', models.BooleanField(default=False)),
                ('container_nums', models.JSONField(blank=True, default=list)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DaemonSet',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('cluster', models.UUIDField()),
                ('name', models.CharField(max_length=100)),
                ('namespace', models.CharField(max_length=100)),
                ('deleted', models.BooleanField(default=False)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Deployment',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('cluster', models.UUIDField()),
                ('name', models.CharField(max_length=100)),
                ('namespace', models.CharField(max_length=100)),
                ('replicas', models.PositiveIntegerField(default=1)),
                ('deleted', models.BooleanField(default=False)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Endpoint',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('cluster', models.UUIDField()),
                ('name', models.CharField(max_length=100)),
                ('namespace', models.CharField(max_length=100)),
                ('addresses', models.JSONField(default=list)),
                ('deleted', models.BooleanField(default=False)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pod',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('cluster', models.UUIDField()),
                ('name', models.CharField(max_length=100)),
                ('namespace', models.CharField(max_length=100)),
                ('ip', models.CharField(blank=True, max_length=15, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('replicaset_owner', models.UUIDField(blank=True, null=True)),
                ('daemonset_owner', models.UUIDField(blank=True, null=True)),
                ('statefulset_owner', models.UUIDField(blank=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReplicaSet',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('cluster', models.UUIDField()),
                ('name', models.CharField(max_length=100)),
                ('namespace', models.CharField(max_length=100)),
                ('owner', models.UUIDField(blank=True, null=True)),
                ('replicas', models.PositiveIntegerField()),
                ('deleted', models.BooleanField(default=False)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('cluster', models.UUIDField()),
                ('name', models.CharField(max_length=100)),
                ('namespace', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('cluster_ips', models.JSONField(default=list)),
                ('deleted', models.BooleanField(default=False)),
                ('ports', models.JSONField(default=list)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('prometheus_queries', models.JSONField(default=dict)),
                ('onprem_key', models.UUIDField(blank=True, editable=False, null=True, serialize=False)),
                ('latest_alaz_version', models.CharField(blank=True, max_length=100, null=True)),
                ('used_metrics', models.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name='StatefulSet',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('cluster', models.UUIDField()),
                ('name', models.CharField(max_length=100)),
                ('namespace', models.CharField(max_length=100)),
                ('deleted', models.BooleanField(default=False)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('monitoring_id', models.CharField(max_length=100, unique=True)),
                ('fresh', models.BooleanField(default=True)),
                ('last_data_ts', models.JSONField(blank=True)),
                ('is_alive', models.BooleanField(default=False)),
                ('last_heartbeat', models.DateTimeField(blank=True, null=True)),
                ('alaz_info', models.JSONField(blank=True, default=dict, null=True)),
                ('alaz_version', models.CharField(blank=True, max_length=100, null=True)),
                ('instances', models.JSONField(blank=True, default=dict, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cluster', models.UUIDField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('from_ip', models.CharField(max_length=15)),
                ('to_ip', models.CharField(max_length=15)),
                ('from_port', models.PositiveIntegerField()),
                ('to_port', models.PositiveIntegerField()),
                ('from_uid_pod', models.UUIDField(blank=True, null=True)),
                ('from_uid_service', models.UUIDField(blank=True, null=True)),
                ('from_uid_deployment', models.UUIDField(blank=True, null=True)),
                ('from_uid_daemonset', models.UUIDField(blank=True, null=True)),
                ('to_uid_pod', models.UUIDField(blank=True, null=True)),
                ('to_uid_service', models.UUIDField(blank=True, null=True)),
                ('to_url_outbound', models.CharField(blank=True, max_length=1024, null=True)),
                ('to_uid_deployment', models.UUIDField(blank=True, null=True)),
                ('to_uid_daemonset', models.UUIDField(blank=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'indexes': [models.Index(fields=['cluster'], name='core_connec_cluster_056862_idx')],
                'index_together': {('timestamp',)},
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cluster', models.UUIDField(blank=True, null=True)),
                ('start_time', models.DateTimeField()),
                ('latency', models.BigIntegerField()),
                ('from_ip', models.CharField(max_length=15)),
                ('to_ip', models.CharField(max_length=15)),
                ('from_port', models.PositiveIntegerField()),
                ('to_port', models.PositiveIntegerField()),
                ('from_uid_pod', models.UUIDField(blank=True, null=True)),
                ('from_uid_service', models.UUIDField(blank=True, null=True)),
                ('from_uid_deployment', models.UUIDField(blank=True, null=True)),
                ('from_uid_daemonset', models.UUIDField(blank=True, null=True)),
                ('to_uid_pod', models.UUIDField(blank=True, null=True)),
                ('to_uid_service', models.UUIDField(blank=True, null=True)),
                ('to_url_outbound', models.CharField(blank=True, max_length=1024, null=True)),
                ('to_uid_deployment', models.UUIDField(blank=True, null=True)),
                ('to_uid_daemonset', models.UUIDField(blank=True, null=True)),
                ('protocol', models.CharField(max_length=30)),
                ('status_code', models.PositiveIntegerField(blank=True, null=True)),
                ('fail_reason', models.CharField(blank=True, max_length=100, null=True)),
                ('method', models.CharField(max_length=20)),
                ('path', models.CharField(blank=True, max_length=1248)),
                ('tls', models.BooleanField(default=False)),
                ('tcp_seq_num', models.BigIntegerField(blank=True, null=True)),
                ('node_id', models.CharField(blank=True, max_length=100, null=True)),
                ('thread_id', models.BigIntegerField(blank=True, null=True)),
                ('span_exists', models.BooleanField(default=False)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'indexes': [models.Index(fields=['cluster'], name='core_reques_cluster_138e48_idx')],
                'index_together': {('start_time',)},
            },
        ),
    ]
